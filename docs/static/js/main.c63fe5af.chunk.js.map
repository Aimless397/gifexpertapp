{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAkBhD,OAEE,sBAAMC,SAZa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SArBoB,SAACP,GACzBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,a,+BCPdK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,iDAEiCC,UAAUH,GAF3C,+DAGFI,MAAMF,GAHJ,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAcdM,GAdc,4CAAH,sDCCPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIlC,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJGO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECFd,SAACA,GAAe,IAAD,EAEfhB,mBAAS,CACjCuB,KAAM,GACNa,SAAS,IAJ8B,mBAElCC,EAFkC,KAE3BC,EAF2B,KA4BzC,OApBAC,qBAAU,WACRxB,EAAQC,GACLwB,MAAK,SAAAC,GAEJH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAId,CAACpB,IAUGqB,EDtB0BK,CAAa1B,GAAjCa,EAJ2B,EAIhCN,KAAaa,EAJmB,EAInBA,QAUrB,OACE,eAAC,WAAD,WACE,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAGIH,EAAOJ,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEzBVgB,EAAe,WAAM,MAII3C,mBAAS,CAAC,cAJd,mBAIzB4C,EAJyB,KAIb7C,EAJa,KAWhC,OACE,eAAC,WAAD,WACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEI6C,EAAWnB,KAAI,SAAAT,GAAS,OACtB,cAAC,EAAD,CAEEA,UAAWA,GADNA,Y,YCnBnB6B,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.c63fe5af.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategorias }) => {\n\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = (e) => {\n    console.log(e.target.value);\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.trim().length > 2) {\n      setCategorias(cats => [inputValue, ...cats]);\n      setInputValue('');\n    }\n\n  }\n\n  return (\n\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n      />\n    </form>\n\n  )\n}\n\nAddCategory.propTypes = {\n  setCategorias: PropTypes.func.isRequired\n}\n","\nexport const getGifs = async (categoria) => {\n\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=Bhept4yWBZdFOd30z3lLWj2049VpDhHI`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url // si vienen las imágenes, utilizar\n    };\n  });\n\n  return gifs; // regresar promesa que resuelve la colección de imágenes\n}","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n  \n  /* console.log(id, title, url); */\n\n  return (\n    <div className=\"card animate__animated animate__wobble\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport { getGifs } from '../helpers/getGifs';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ categoria }) => {\n\n  /* const [images, setImages] = useState([]); */\n\n  const { data:images, loading } = useFetchGifs(categoria);\n  /* \n    useEffect(() => {\n      getGifs(categoria)\n        .then(setImages); //.then(imgs => setImages(imgs));\n    }, [categoria]);\n  */\n\n\n  /* console.log(\"IMÁGENES: \", images); */\n  return (\n    <Fragment>\n      <h3 className=\"animate__animated animate__bounce\">{categoria}</h3>\n\n      {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n      \n      <div className=\"card-grid\">\n\n        {\n          images.map(img => (\n            <GifGridItem\n              key={img.id}\n              {...img}\n            />\n          ))\n        }\n\n      </div>\n    </Fragment>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (categoria) => {\n\n  const [state, setstate] = useState({\n    data: [],\n    loading: true\n  });\n\n\n  useEffect(() => {\n    getGifs(categoria)\n      .then(imgs => {\n\n        setstate({\n          data: imgs,\n          loading: false\n        });\n\n      });\n  }, [categoria])\n\n  /* \n    setTimeout(() => {\n      setstate({\n        data: [1, 2, 3, 4, 5],\n        loading: false\n      })\n    }, 3000); */\n\n  return state;\n}\n","import React, { Fragment, useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\nexport const GifExpertApp = () => {\n\n  // const categorias = ['One Punch', 'Samurai X', 'Dragon Ball'];\n\n  const [categorias, setCategorias] = useState(['One Punch']);\n\n  /* const handleAdd = (e) => {\n    //setCategorias([...categorias, 'HunterXHunter']);\n    setCategorias(cats => [...cats, 'HunterXHunter']);\n  } */\n\n  return (\n    <Fragment>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategorias={setCategorias} />\n      <hr />\n\n      <ol>\n        {\n          categorias.map(categoria => (\n            <GifGrid\n              key={categoria}\n              categoria={categoria}\n            />\n          ))\n        }\n      </ol>\n\n    </Fragment>\n  )\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\nimport 'animate.css';\n\n\nReactDOM.render(\n\n  <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}